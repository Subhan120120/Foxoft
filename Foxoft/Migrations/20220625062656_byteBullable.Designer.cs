// <auto-generated />
using System;
using Foxoft.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Foxoft.Migrations
{
    [DbContext(typeof(subContext))]
    [Migration("20220625062656_byteBullable")]
    partial class byteBullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Foxoft.Models.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("GetPrint")
                        .HasColumnType("bit");

                    b.Property<string>("GridViewLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintDesignPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrinterCopyNum")
                        .HasColumnType("int");

                    b.Property<string>("PrinterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GetPrint = false,
                            GridViewLayout = "<XtraSerializer version=\"1.0\" application=\"View\">\r\n	<property name=\"#LayoutVersion\" />\r\n	<property name=\"#LayoutScaleFactor\">@1,Width=1@1,Height=1</property>\r\n	<property name=\"Appearance\" isnull=\"true\" iskey=\"true\">\r\n		<property name=\"Row\" iskey=\"true\" value=\"Row\">\r\n			<property name=\"Options\" isnull=\"true\" iskey=\"true\">\r\n				<property name=\"UseFont\">true</property>\r\n			</property>\r\n			<property name=\"Font\">Tahoma, 12pt</property>\r\n		</property>\r\n		<property name=\"FooterPanel\" iskey=\"true\" value=\"FooterPanel\">\r\n			<property name=\"Options\" isnull=\"true\" iskey=\"true\">\r\n				<property name=\"UseFont\">true</property>\r\n			</property>\r\n			<property name=\"Font\">Tahoma, 12pt</property>\r\n		</property>\r\n	</property>\r\n	<property name=\"OptionsBehavior\" isnull=\"true\" iskey=\"true\">\r\n		<property name=\"Editable\">false</property>\r\n		<property name=\"ReadOnly\">true</property>\r\n	</property>\r\n	<property name=\"OptionsView\" isnull=\"true\" iskey=\"true\">\r\n		<property name=\"ColumnHeaderAutoHeight\">True</property>\r\n		<property name=\"ShowGroupPanel\">false</property>\r\n		<property name=\"ShowIndicator\">false</property>\r\n	</property>\r\n	<property name=\"FixedLineWidth\">2</property>\r\n	<property name=\"IndicatorWidth\">-1</property>\r\n	<property name=\"ColumnPanelRowHeight\">-1</property>\r\n	<property name=\"RowSeparatorHeight\">0</property>\r\n	<property name=\"FooterPanelHeight\">-1</property>\r\n	<property name=\"HorzScrollVisibility\">Auto</property>\r\n	<property name=\"VertScrollVisibility\">Auto</property>\r\n	<property name=\"RowHeight\">-1</property>\r\n	<property name=\"GroupRowHeight\">-1</property>\r\n	<property name=\"GroupFormat\">{0}: [#image]{1} {2}</property>\r\n	<property name=\"ChildGridLevelName\" />\r\n	<property name=\"VertScrollTipFieldName\" />\r\n	<property name=\"PreviewFieldName\" />\r\n	<property name=\"GroupPanelText\" />\r\n	<property name=\"NewItemRowText\" />\r\n	<property name=\"LevelIndent\">-1</property>\r\n	<property name=\"PreviewIndent\">-1</property>\r\n	<property name=\"PreviewLineCount\">-1</property>\r\n	<property name=\"ScrollStyle\">LiveVertScroll, LiveHorzScroll</property>\r\n	<property name=\"FocusRectStyle\">CellFocus</property>\r\n	<property name=\"HorzScrollStep\">0</property>\r\n	<property name=\"ActiveFilterEnabled\">true</property>\r\n	<property name=\"ViewCaptionHeight\">-1</property>\r\n	<property name=\"Columns\" iskey=\"true\" value=\"0\" />\r\n	<property name=\"ViewCaption\" />\r\n	<property name=\"BorderStyle\">Default</property>\r\n	<property name=\"SynchronizeClones\">true</property>\r\n	<property name=\"DetailTabHeaderLocation\">Top</property>\r\n	<property name=\"Name\">gridView1</property>\r\n	<property name=\"DetailHeight\">350</property>\r\n	<property name=\"Tag\" isnull=\"true\" />\r\n	<property name=\"GroupSummary\" iskey=\"true\" value=\"0\" />\r\n	<property name=\"ActiveFilterString\" />\r\n	<property name=\"FormatRules\" iskey=\"true\" value=\"0\" />\r\n	<property name=\"FormatConditions\" iskey=\"true\" value=\"0\" />\r\n	<property name=\"GroupSummarySortInfoState\" />\r\n	<property name=\"FindFilterText\" />\r\n	<property name=\"FindPanelVisible\">true</property>\r\n</XtraSerializer>",
                            PrinterCopyNum = 0
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcClaim", b =>
                {
                    b.Property<string>("ClaimCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClaimDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimCode");

                    b.ToTable("DcClaims");

                    b.HasData(
                        new
                        {
                            ClaimCode = "PosDiscount",
                            ClaimDesc = "POS Endirimi"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrAcc", b =>
                {
                    b.Property<string>("CurrAccCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime?>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValue(new DateTime(1901, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("BonusCardNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte>("CompanyCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<decimal>("CreditLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<byte>("CurrAccTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<double>("CustomerPosDiscountRate")
                        .HasColumnType("float");

                    b.Property<byte?>("CustomerTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("DataLanguageCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("FatherName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("IdentityNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsVIP")
                        .HasDefaultValueSql("0");

                    b.Property<string>("LastName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("NewPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("PhoneNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte>("VendorTypeCode")
                        .HasColumnType("tinyint");

                    b.HasKey("CurrAccCode");

                    b.HasIndex("CurrAccTypeCode")
                        .HasDatabaseName("IX_CurrAccTypeCode");

                    b.ToTable("DcCurrAccs");

                    b.HasData(
                        new
                        {
                            CurrAccCode = "CA-1",
                            CompanyCode = (byte)0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 0m,
                            CurrAccTypeCode = (byte)1,
                            CustomerPosDiscountRate = 0.0,
                            FirstName = "Sübhan",
                            IsDisabled = false,
                            IsVip = false,
                            LastName = "Hüseynzadə",
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NewPassword = "123",
                            OfficeCode = "ofs01",
                            PhoneNum = "0519678909",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            StoreCode = "mgz01",
                            VendorTypeCode = (byte)0
                        },
                        new
                        {
                            CurrAccCode = "CA-2",
                            CompanyCode = (byte)0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 0m,
                            CurrAccTypeCode = (byte)1,
                            CustomerPosDiscountRate = 0.0,
                            FirstName = "Cemil",
                            IsDisabled = false,
                            IsVip = false,
                            LastName = "Cavadov",
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NewPassword = "123",
                            PhoneNum = "0519678909",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorTypeCode = (byte)0
                        },
                        new
                        {
                            CurrAccCode = "CA-3",
                            CompanyCode = (byte)0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 0m,
                            CurrAccTypeCode = (byte)2,
                            CustomerPosDiscountRate = 0.0,
                            FirstName = "Orxan",
                            IsDisabled = false,
                            IsVip = false,
                            LastName = "Sederek",
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NewPassword = "456",
                            PhoneNum = "0773628800",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorTypeCode = (byte)0
                        },
                        new
                        {
                            CurrAccCode = "CA-4",
                            CompanyCode = (byte)0,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 0m,
                            CurrAccTypeCode = (byte)3,
                            CustomerPosDiscountRate = 0.0,
                            FirstName = "Vagif",
                            IsDisabled = false,
                            IsVip = false,
                            LastName = "Mustafayev",
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NewPassword = "456",
                            PhoneNum = "0553628804",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            VendorTypeCode = (byte)0
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrAccType", b =>
                {
                    b.Property<byte>("CurrAccTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("CurrAccTypeDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CurrAccTypeCode");

                    b.ToTable("DcCurrAccTypes");

                    b.HasData(
                        new
                        {
                            CurrAccTypeCode = (byte)1,
                            CurrAccTypeDesc = "Müştəri",
                            IsDisabled = false,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            CurrAccTypeCode = (byte)2,
                            CurrAccTypeDesc = "Tədarikçi",
                            IsDisabled = false,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            CurrAccTypeCode = (byte)3,
                            CurrAccTypeDesc = "Personal",
                            IsDisabled = false,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrency", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.HasKey("CurrencyCode");

                    b.ToTable("DcCurrencies");

                    b.HasData(
                        new
                        {
                            CurrencyCode = "AZN",
                            CurrencyDesc = "₼ AZN",
                            ExchangeRate = 1f
                        },
                        new
                        {
                            CurrencyCode = "USD",
                            CurrencyDesc = "$ Dollar",
                            ExchangeRate = 1.703f
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DcFeatures");
                });

            modelBuilder.Entity("Foxoft.Models.DcOffice", b =>
                {
                    b.Property<string>("OfficeCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4,0)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("OfficeDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OfficeCode");

                    b.ToTable("DcOffices");

                    b.HasData(
                        new
                        {
                            OfficeCode = "ofs01",
                            CompanyCode = 0m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OfficeDesc = "Bakıxanov Ofisi",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            OfficeCode = "ofs02",
                            CompanyCode = 0m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OfficeDesc = "Elmlər Ofisi",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcPaymentType", b =>
                {
                    b.Property<byte>("PaymentTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("PaymentTypeDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("PaymentTypeCode");

                    b.ToTable("DcPaymentTypes");

                    b.HasData(
                        new
                        {
                            PaymentTypeCode = (byte)1,
                            PaymentTypeDesc = "Nağd"
                        },
                        new
                        {
                            PaymentTypeCode = (byte)2,
                            PaymentTypeDesc = "Visa"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcProcess", b =>
                {
                    b.Property<string>("ProcessCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ProcessDescription")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("ProcessCode");

                    b.ToTable("DcProcesses");

                    b.HasData(
                        new
                        {
                            ProcessCode = "RS",
                            ProcessDescription = "Satış"
                        },
                        new
                        {
                            ProcessCode = "RP",
                            ProcessDescription = "Alış"
                        },
                        new
                        {
                            ProcessCode = "PA",
                            ProcessDescription = "Ödəmə"
                        },
                        new
                        {
                            ProcessCode = "SB",
                            ProcessDescription = "Toptan Alış"
                        },
                        new
                        {
                            ProcessCode = "WS",
                            ProcessDescription = "Toptan Satış"
                        },
                        new
                        {
                            ProcessCode = "EX",
                            ProcessDescription = "Xərclər"
                        },
                        new
                        {
                            ProcessCode = "PE",
                            ProcessDescription = "Dovr"
                        },
                        new
                        {
                            ProcessCode = "CI",
                            ProcessDescription = "Sayım Artırma"
                        },
                        new
                        {
                            ProcessCode = "CO",
                            ProcessDescription = "Sayım Azaltma"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcProduct", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Barcode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<double>("PosDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte>("ProductTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("PromotionCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("PromotionCode2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<double>("PurchasePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double>("RetailPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("UseInternet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("UsePos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<double>("WholesalePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("ProductCode");

                    b.HasIndex("ProductTypeCode")
                        .HasDatabaseName("IX_ProductTypeCode");

                    b.ToTable("DcProducts");

                    b.HasData(
                        new
                        {
                            ProductCode = "test01",
                            Barcode = "123456",
                            CreatedDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PosDiscount = 0.0,
                            ProductDescription = "Papaq",
                            ProductTypeCode = (byte)1,
                            PurchasePrice = 0.0,
                            RetailPrice = 4.5,
                            TaxRate = 0.0,
                            UseInternet = false,
                            UsePos = false,
                            WholesalePrice = 0.0
                        },
                        new
                        {
                            ProductCode = "test02",
                            Barcode = "2000000000013",
                            CreatedDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PosDiscount = 0.0,
                            ProductDescription = "Salvar",
                            ProductTypeCode = (byte)1,
                            PurchasePrice = 0.0,
                            RetailPrice = 2.5,
                            TaxRate = 0.0,
                            UseInternet = false,
                            UsePos = false,
                            WholesalePrice = 0.0
                        },
                        new
                        {
                            ProductCode = "xerc01",
                            Barcode = "",
                            CreatedDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PosDiscount = 0.0,
                            ProductDescription = "Yol Xerci",
                            ProductTypeCode = (byte)2,
                            PurchasePrice = 0.0,
                            RetailPrice = 0.0,
                            TaxRate = 0.0,
                            UseInternet = false,
                            UsePos = false,
                            WholesalePrice = 0.0
                        },
                        new
                        {
                            ProductCode = "xerc02",
                            Barcode = "",
                            CreatedDate = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PosDiscount = 0.0,
                            ProductDescription = "Isiq Pulu",
                            ProductTypeCode = (byte)2,
                            PurchasePrice = 0.0,
                            RetailPrice = 0.0,
                            TaxRate = 0.0,
                            UseInternet = false,
                            UsePos = false,
                            WholesalePrice = 0.0
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcProductType", b =>
                {
                    b.Property<byte>("ProductTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProductTypeDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("ProductTypeCode");

                    b.ToTable("DcProductTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeCode = (byte)1,
                            ProductTypeDesc = "Məhsul"
                        },
                        new
                        {
                            ProductTypeCode = (byte)2,
                            ProductTypeDesc = "Xərc"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("ReportFilter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportQuery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportId");

                    b.ToTable("DcReports");

                    b.HasData(
                        new
                        {
                            ReportId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReportName = "Satis",
                            ReportQuery = "select * from TrInvoiceLines"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcRole", b =>
                {
                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("RoleDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleCode");

                    b.ToTable("DcRoles");

                    b.HasData(
                        new
                        {
                            RoleCode = "Admin",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDesc = "Administrator"
                        },
                        new
                        {
                            RoleCode = "MGZ",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDesc = "Mağaza İstifadəçisi"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcStore", b =>
                {
                    b.Property<string>("StoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("numeric(4,0)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("StoreCode");

                    b.ToTable("DcStores");

                    b.HasData(
                        new
                        {
                            StoreCode = "mgz01",
                            CompanyCode = 0m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            StoreDesc = "Bakıxanov"
                        },
                        new
                        {
                            StoreCode = "mgz02",
                            CompanyCode = 0m,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            StoreDesc = "Elmlər"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcTerminal", b =>
                {
                    b.Property<string>("TerminalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TerminalDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("TerminalCode");

                    b.ToTable("DcTerminals");
                });

            modelBuilder.Entity("Foxoft.Models.DcVariable", b =>
                {
                    b.Property<string>("VariableCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<string>("VariableDesc")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("VariableCode");

                    b.ToTable("DcVariables");

                    b.HasData(
                        new
                        {
                            VariableCode = "C",
                            VariableDesc = "Cari"
                        },
                        new
                        {
                            VariableCode = "P",
                            VariableDesc = "Məhsul"
                        },
                        new
                        {
                            VariableCode = "RS",
                            VariableDesc = "Pərakəndə Satış"
                        },
                        new
                        {
                            VariableCode = "RP",
                            VariableDesc = "Pərakəndə Alış"
                        },
                        new
                        {
                            VariableCode = "PA",
                            VariableDesc = "Ödəmə"
                        },
                        new
                        {
                            VariableCode = "SB",
                            VariableDesc = "Toptan Alış"
                        },
                        new
                        {
                            VariableCode = "WS",
                            VariableDesc = "Toptan Satış"
                        },
                        new
                        {
                            VariableCode = "EX",
                            VariableDesc = "Xərclər"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.DcWarehouse", b =>
                {
                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ControlStockLevel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("OfficeCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("PermitNegativeStock")
                        .HasColumnType("bit");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("WarehouseDesc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte>("WarehouseTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<bool>("WarnNegativeStock")
                        .HasColumnType("bit");

                    b.Property<bool>("WarnStockLevelRate")
                        .HasColumnType("bit");

                    b.HasKey("WarehouseCode");

                    b.ToTable("DcWarehouses");

                    b.HasData(
                        new
                        {
                            WarehouseCode = "depo-01",
                            ControlStockLevel = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermitNegativeStock = false,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            WarehouseDesc = "Bakıxanov deposu",
                            WarehouseTypeCode = (byte)0,
                            WarnNegativeStock = false,
                            WarnStockLevelRate = false
                        },
                        new
                        {
                            WarehouseCode = "depo-02",
                            ControlStockLevel = false,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDefault = false,
                            IsDisabled = false,
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PermitNegativeStock = false,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            WarehouseDesc = "Elmlər deposu",
                            WarehouseTypeCode = (byte)0,
                            WarnNegativeStock = false,
                            WarnStockLevelRate = false
                        });
                });

            modelBuilder.Entity("Foxoft.Models.GetNextDocNum", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("GetNextDocNum");
                });

            modelBuilder.Entity("Foxoft.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("Foxoft.Models.RetailSale", b =>
                {
                    b.Property<string>("trInvoiceLineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("trInvoiceLineId");

                    b.ToView("RetailSale");
                });

            modelBuilder.Entity("Foxoft.Models.Sysdiagrams", b =>
                {
                    b.Property<int>("DiagramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("diagram_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Definition")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("definition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("Version")
                        .HasColumnType("int")
                        .HasColumnName("version");

                    b.HasKey("DiagramId")
                        .HasName("PK_dbo.sysdiagrams");

                    b.ToTable("sysdiagrams");
                });

            modelBuilder.Entity("Foxoft.Models.TrCurrAccRole", b =>
                {
                    b.Property<int>("CurrAccRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrAccCode")
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CurrAccRoleId");

                    b.HasIndex("CurrAccCode");

                    b.HasIndex("RoleCode");

                    b.ToTable("TrCurrAccRoles");

                    b.HasData(
                        new
                        {
                            CurrAccRoleId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrAccCode = "CA-1",
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleCode = "Admin"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.TrFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode");

                    b.HasIndex("FeatureId", "ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.ToTable("TrFeatures");
                });

            modelBuilder.Entity("Foxoft.Models.TrInvoiceHeader", b =>
                {
                    b.Property<Guid>("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrAccCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CustomsDocumentNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("DocumentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<TimeSpan>("DocumentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<byte>("FiscalPrintedState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsPrinted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsReturn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSalesViaInternet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsSuspended")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("OperationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<TimeSpan>("OperationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<string>("PosTerminalId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<Guid?>("RelatedInvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("InvoiceHeaderId");

                    b.HasIndex("CurrAccCode")
                        .HasDatabaseName("IX_CurrAccCode");

                    b.ToTable("TrInvoiceHeaders");
                });

            modelBuilder.Entity("Foxoft.Models.TrInvoiceLine", b =>
                {
                    b.Property<Guid>("InvoiceLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<decimal>("AmountLoc")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("DiscountCampaign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<float>("ExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("LineDescription")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<decimal>("NetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<decimal>("NetAmountLoc")
                        .HasColumnType("money");

                    b.Property<decimal>("PosDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<double>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<double>("PriceLoc")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("QtyIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<int>("QtyOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<Guid?>("RelatedLineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<float>("VatRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("0");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("InvoiceHeaderId")
                        .HasDatabaseName("IX_InvoiceHeaderId");

                    b.HasIndex("ProductCode")
                        .HasDatabaseName("IX_ProductCode");

                    b.ToTable("TrInvoiceLines");
                });

            modelBuilder.Entity("Foxoft.Models.TrPaymentHeader", b =>
                {
                    b.Property<Guid>("PaymentHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompanyCode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrAccCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<DateTime>("DocumentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<TimeSpan>("DocumentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<double>("ExchangeRate")
                        .HasMaxLength(60)
                        .HasColumnType("float");

                    b.Property<Guid?>("InvoiceHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("OperationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<TimeSpan>("OperationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<string>("OperationType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<short>("PosterminalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("PaymentHeaderId");

                    b.HasIndex("CurrAccCode");

                    b.HasIndex("InvoiceHeaderId");

                    b.ToTable("TrPaymentHeaders");
                });

            modelBuilder.Entity("Foxoft.Models.TrPaymentLine", b =>
                {
                    b.Property<Guid>("PaymentLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("BankId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("ExchangeRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("LineDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<decimal>("Payment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("0");

                    b.Property<Guid>("PaymentHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("PaymentTypeCode")
                        .HasColumnType("tinyint");

                    b.HasKey("PaymentLineId");

                    b.HasIndex("CurrencyCode");

                    b.HasIndex("PaymentHeaderId");

                    b.HasIndex("PaymentTypeCode");

                    b.ToTable("TrPaymentLines");
                });

            modelBuilder.Entity("Foxoft.Models.TrPrice", b =>
                {
                    b.Property<int>("PriceCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PriceCode");

                    b.HasIndex("ProductCode");

                    b.ToTable("TrPrices");
                });

            modelBuilder.Entity("Foxoft.Models.TrRoleClaim", b =>
                {
                    b.Property<int>("RoleClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleClaimId");

                    b.HasIndex("ClaimCode");

                    b.HasIndex("RoleCode");

                    b.ToTable("TrRoleClaims");

                    b.HasData(
                        new
                        {
                            RoleClaimId = 1,
                            ClaimCode = "PosDiscount",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleCode = "Admin"
                        });
                });

            modelBuilder.Entity("Foxoft.Models.TrShipmentHeader", b =>
                {
                    b.Property<Guid>("ShipmentHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CompanyCode")
                        .HasMaxLength(10)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrAccCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CustomsDocumentNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrderBase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("OfficeCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("OperationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<TimeSpan>("OperationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<byte>("ShipTypeCode")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ShippingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("ShippingNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<Guid?>("ShippingPostalAddressId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("space(0)");

                    b.Property<TimeSpan>("ShippingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time(0)")
                        .HasDefaultValueSql("convert(varchar(10), GETDATE(), 108)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("ToWarehouseCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("TransferApprovedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("ShipmentHeaderId");

                    b.ToTable("TrShipmentHeaders");
                });

            modelBuilder.Entity("Foxoft.Models.TrShipmentLine", b =>
                {
                    b.Property<Guid>("ShipmentLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("CreatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("LastUpdatedUserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValueSql("substring(suser_name(),patindex('%\\%',suser_name())+(1),(20))");

                    b.Property<string>("LineDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("ProductCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<string>("ProductDimensionCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SalespersonCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.Property<Guid>("ShipmentHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UsedBarcode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("space(0)");

                    b.HasKey("ShipmentLineId");

                    b.HasIndex("ShipmentHeaderId")
                        .HasDatabaseName("IX_ShipmentHeaderID");

                    b.ToTable("TrShipmentLines");
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrAcc", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrAccType", "DcCurrAccType")
                        .WithMany("DcCurrAccs")
                        .HasForeignKey("CurrAccTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcCurrAccType");
                });

            modelBuilder.Entity("Foxoft.Models.DcProduct", b =>
                {
                    b.HasOne("Foxoft.Models.DcProductType", "DcProductType")
                        .WithMany("DcProducts")
                        .HasForeignKey("ProductTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcProductType");
                });

            modelBuilder.Entity("Foxoft.Models.TrCurrAccRole", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrAcc", "DcCurrAcc")
                        .WithMany("TrCurrAccRole")
                        .HasForeignKey("CurrAccCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Foxoft.Models.DcRole", "DcRole")
                        .WithMany("TrCurrAccRoles")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DcCurrAcc");

                    b.Navigation("DcRole");
                });

            modelBuilder.Entity("Foxoft.Models.TrFeature", b =>
                {
                    b.HasOne("Foxoft.Models.DcFeature", "DcFeature")
                        .WithMany("TrFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Foxoft.Models.DcProduct", "DcProduct")
                        .WithMany("TrFeature")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DcFeature");

                    b.Navigation("DcProduct");
                });

            modelBuilder.Entity("Foxoft.Models.TrInvoiceHeader", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrAcc", "DcCurrAcc")
                        .WithMany("TrInvoiceHeaders")
                        .HasForeignKey("CurrAccCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DcCurrAcc");
                });

            modelBuilder.Entity("Foxoft.Models.TrInvoiceLine", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrency", "DcCurrency")
                        .WithMany("TrInvoiceLines")
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Foxoft.Models.TrInvoiceHeader", "TrInvoiceHeader")
                        .WithMany("TrInvoiceLines")
                        .HasForeignKey("InvoiceHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foxoft.Models.DcProduct", "DcProduct")
                        .WithMany("TrInvoiceLines")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcCurrency");

                    b.Navigation("DcProduct");

                    b.Navigation("TrInvoiceHeader");
                });

            modelBuilder.Entity("Foxoft.Models.TrPaymentHeader", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrAcc", "DcCurrAcc")
                        .WithMany("TrPaymentHeaders")
                        .HasForeignKey("CurrAccCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Foxoft.Models.TrInvoiceHeader", "TrInvoiceHeader")
                        .WithMany("TrPaymentHeaders")
                        .HasForeignKey("InvoiceHeaderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DcCurrAcc");

                    b.Navigation("TrInvoiceHeader");
                });

            modelBuilder.Entity("Foxoft.Models.TrPaymentLine", b =>
                {
                    b.HasOne("Foxoft.Models.DcCurrency", "DcCurrency")
                        .WithMany("TrPaymentLines")
                        .HasForeignKey("CurrencyCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Foxoft.Models.TrPaymentHeader", "TrPaymentHeader")
                        .WithMany("TrPaymentLines")
                        .HasForeignKey("PaymentHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foxoft.Models.DcPaymentType", "DcPaymentType")
                        .WithMany("TrPaymentLines")
                        .HasForeignKey("PaymentTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcCurrency");

                    b.Navigation("DcPaymentType");

                    b.Navigation("TrPaymentHeader");
                });

            modelBuilder.Entity("Foxoft.Models.TrPrice", b =>
                {
                    b.HasOne("Foxoft.Models.DcProduct", "DcProduct")
                        .WithMany("TrPrices")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcProduct");
                });

            modelBuilder.Entity("Foxoft.Models.TrRoleClaim", b =>
                {
                    b.HasOne("Foxoft.Models.DcClaim", "DcClaim")
                        .WithMany("TrRoleClaims")
                        .HasForeignKey("ClaimCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Foxoft.Models.DcRole", "DcRole")
                        .WithMany("TrRoleClaims")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DcClaim");

                    b.Navigation("DcRole");
                });

            modelBuilder.Entity("Foxoft.Models.TrShipmentLine", b =>
                {
                    b.HasOne("Foxoft.Models.TrShipmentHeader", "TrShipmentHeader")
                        .WithMany("TrShipmentLines")
                        .HasForeignKey("ShipmentHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TrShipmentHeader");
                });

            modelBuilder.Entity("Foxoft.Models.DcClaim", b =>
                {
                    b.Navigation("TrRoleClaims");
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrAcc", b =>
                {
                    b.Navigation("TrCurrAccRole");

                    b.Navigation("TrInvoiceHeaders");

                    b.Navigation("TrPaymentHeaders");
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrAccType", b =>
                {
                    b.Navigation("DcCurrAccs");
                });

            modelBuilder.Entity("Foxoft.Models.DcCurrency", b =>
                {
                    b.Navigation("TrInvoiceLines");

                    b.Navigation("TrPaymentLines");
                });

            modelBuilder.Entity("Foxoft.Models.DcFeature", b =>
                {
                    b.Navigation("TrFeatures");
                });

            modelBuilder.Entity("Foxoft.Models.DcPaymentType", b =>
                {
                    b.Navigation("TrPaymentLines");
                });

            modelBuilder.Entity("Foxoft.Models.DcProduct", b =>
                {
                    b.Navigation("TrFeature");

                    b.Navigation("TrInvoiceLines");

                    b.Navigation("TrPrices");
                });

            modelBuilder.Entity("Foxoft.Models.DcProductType", b =>
                {
                    b.Navigation("DcProducts");
                });

            modelBuilder.Entity("Foxoft.Models.DcRole", b =>
                {
                    b.Navigation("TrCurrAccRoles");

                    b.Navigation("TrRoleClaims");
                });

            modelBuilder.Entity("Foxoft.Models.TrInvoiceHeader", b =>
                {
                    b.Navigation("TrInvoiceLines");

                    b.Navigation("TrPaymentHeaders");
                });

            modelBuilder.Entity("Foxoft.Models.TrPaymentHeader", b =>
                {
                    b.Navigation("TrPaymentLines");
                });

            modelBuilder.Entity("Foxoft.Models.TrShipmentHeader", b =>
                {
                    b.Navigation("TrShipmentLines");
                });
#pragma warning restore 612, 618
        }
    }
}
