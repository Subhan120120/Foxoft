using Microsoft.EntityFrameworkCore.Migrations;

namespace Foxoft.Migrations
{
    public partial class Report_Embedded_ProductList : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "DcReports",
                keyColumn: "ReportId",
                keyValue: 1,
                column: "ReportQuery",
                value: "\r\n\r\n\r\n\r\n\r\n\r\n\r\n	--declare @StartDate date = dateadd(DAY, 1, getdate())\r\n	--declare @StartTime time =  '00:00:00.000'\r\n\r\n	select ProductCode\r\n		  , [Məhsulun Geniş Adı]= isnull(HierarchyCode + ' ','')  + ProductDesc +  isnull(' ' + [4],'') + isnull(' ' + [5],'') \r\n		  + isnull(' ' + [6],'') + isnull(' ' + [7],'') + isnull(' ' + [8],'') + isnull(' ' + [9],'') + isnull(' ' + [10],'') \r\n		  + isnull(' ' + [11],'') + isnull(' ' + [12],'') + isnull(' ' + [13],'') + isnull(' ' + [16],'') + isnull(' ' + [17],'') \r\n		  + isnull(' ' + [18],'') + isnull(' ' + [19] + 'x' + [20] + 'x' + [21],'') + isnull(' ' + [22],'')+ isnull(' ' + [23],'')\r\n		  + isnull(' ' + [24],'') + isnull(' ' + [25],'') + isnull(' ' + [26],'') + isnull(' ' + [27],'') + isnull(' ' + [28],'') \r\n, ProductDesc \r\n		  , LastPurchasePrice = CAST(LastPurchasePrice as money)\r\n		  , Mərkəz = ISNULL([depo-01], 0)\r\n		  , [Sıra 20] = ISNULL([depo-02], 0)\r\n		  , [Sıra 5] = ISNULL([depo-03], 0)\r\n		  , Balance = isnull([depo-01], 0) + isnull([depo-02],0) + isnull([depo-03],0)\r\n		  , WholesalePrice\r\n		  , Manatla = ROUND(WholesalePrice*1.703, -1 )\r\n		  , HierarchyCode\r\n		  , HierarchyDesc\r\n		  , ProductTypeCode\r\n		  , ProductId\r\n		  , [Marka] = isnull(' ' + [3],'')\r\n		  , [Çəki] = isnull(' ' + [4],'')\r\n		  , [Rəng] = isnull(' ' + [5],'')\r\n		  , [Məhsul Tipi] = isnull(' ' + [6],'')\r\n		  , [Soyutma Tipi] = isnull(' ' + [7],'')\r\n		  , [BTU] = isnull(' ' + [9],'')\r\n		  , [Ekran Ölçüsü] = isnull(' ' + [10],'')\r\n		  , [Ekran İcazəsi] = isnull(' ' + [11],'')\r\n		  , [Motorun Növü] = isnull(' ' + [12],'')\r\n		  , [Həcmi] = isnull(' ' + [13],'')\r\n		  , [Soyuducu Kameranın Həcmi] = isnull(' ' + [14],'')\r\n		  , [Dondurucu Kameranın Həcmi] = isnull(' ' + [15],'')\r\n		  , [Istehsalçı Ölkə] = isnull(' ' + [16],'')\r\n		  , [Məhsuldarlıq] = isnull(' ' + [17],'')\r\n		  , [Güc] = isnull(' ' + [18],'')\r\n		  , [Kameranın Həcmi] = isnull(' ' + [19] + 'x' + [20] + 'x' + [21] ,'')\r\n		  , [Dispenser] = isnull(' ' + [22],'')\r\n		  , [Tutum Dəst] = isnull(' ' + [23],'')\r\n		  , [Rəflərin Sayı] = isnull(' ' + [24],'')\r\n		  , [Fırlanma Sürəti] = isnull(' ' + [25],'')\r\n		  , [Ocaq Sayı] = isnull(' ' + [26],'')\r\n		  , [Qaz Kontrol] = isnull(' ' + [27],'')\r\n		  , [Ocaq Növü] = isnull(' ' + [28],'')\r\n		  , [Programların Sayı] = isnull(' ' + [29],'')\r\n	from ( select \r\n	*\r\n			from (\r\n				select DcProducts.ProductCode\r\n							, ProductDesc\r\n							, DcHierarchies.HierarchyCode\r\n							, HierarchyDesc\r\n							, FeatureCode\r\n							, WarehouseCode\r\n							, WholesalePrice \r\n							, ProductTypeCode\r\n							, FeatureTypeId\r\n							, ProductId\r\n							, LastPurchasePrice = (select top 1 toplam = TrInvoiceLines.PriceLoc * (1 - (TrInvoiceLines.PosDiscount / 100))  \r\n															from TrInvoiceLines \r\n															join TrInvoiceHeaders on TrInvoiceHeaders.InvoiceHeaderId = TrInvoiceLines.InvoiceHeaderId\r\n															where TrInvoiceLines.ProductCode = DcProducts.ProductCode\r\n															and TrInvoiceHeaders.ProcessCode IN ( 'RP','CI')\r\n															and TrInvoiceHeaders.IsReturn = 0\r\n															ORDER BY TrInvoiceHeaders.DocumentDate desc, DcHierarchies.HierarchyCode desc\r\n															, TrInvoiceLines.CreatedDate desc\r\n											)											 \r\n				, Balance = SUM(ISNULL(QtyIn,0) - ISNULL(QtyOut,0))  \r\n				--, LastPurchasePrice = ()\r\n				from DcProducts\r\n			\r\n				left join TrInvoiceLines il on il.ProductCode = DcProducts.ProductCode\r\n				left join TrInvoiceHeaders ih on il.InvoiceHeaderId = ih.InvoiceHeaderId\r\n				left join DcHierarchies on DcProducts.HierarchyCode = DcHierarchies.HierarchyCode\r\n				left join TrProductFeatures on TrProductFeatures.ProductCode = DcProducts.ProductCode\r\n				left join SiteProducts on SiteProducts.ProductCode = DcProducts.ProductCode\r\n\r\n				--where ProductTypeCode = 1\r\n				--and (CAST(ih.DocumentDate AS DATETIME) + CAST(ih.DocumentTime AS DATETIME)) <=\r\n				--	(CAST(@StartDate AS DATETIME) + CAST(@StartTime AS DATETIME))\r\n					--and il.ProductCode = '5503'\r\n			\r\n				group by DcProducts.ProductCode\r\n						 , DcProducts.ProductDesc\r\n						 , WholesalePrice \r\n						 , WarehouseCode\r\n						 , FeatureCode				\r\n						 , ProductTypeCode\r\n						 , DcHierarchies.HierarchyCode\r\n						 , HierarchyDesc\r\n						 , FeatureTypeId\r\n						 , ProductId\r\n						 --, reng.FeatureCode\r\n						 --, frost.FeatureCode \r\n				 ) as st\r\n				 PIVOT  \r\n				 (  \r\n				  Max(FeatureCode)\r\n				   FOR FeatureTypeId IN ([3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29])  \r\n				 ) AS PivotTable2\r\n	) AS SourceTable  \r\n	PIVOT  \r\n	(  \r\n	 AVG(Balance)\r\n	  FOR WarehouseCode IN ([depo-01], [depo-02], [depo-03])  \r\n	) AS PivotTable \r\n\r\n\r\n\r\n\r\n\r\n\r\n");
        }
    }
}
